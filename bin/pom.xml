<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.sansa-stack</groupId>
	<artifactId>sansa-query-parent_2.11</artifactId>
	<version>0.5.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>SANSA Stack - Query Layer - Parent</name>
	<description>SANSA Query Library</description>
	<url>https://github.com/SANSA-Stack/SANSA-Query</url>
	<inceptionYear>2015</inceptionYear>

	<organization>
		<name>Smart Data Analytics (SDA) research group</name>
		<url>http://sda.tech</url>
	</organization>


	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<encoding>UTF-8</encoding>

		<sansa.rdf.version>0.5.1-SNAPSHOT</sansa.rdf.version>
		<sansa.datalake.version>0.1.1-SNAPSHOT</sansa.datalake.version>

		<scala.version>2.11.11</scala.version>
		<scala.binary.version>2.11</scala.binary.version>
		<scala.classifier>${scala.binary.version}</scala.classifier>

		<scala.version.suffix>_${scala.binary.version}</scala.version.suffix>

		<spark.version>2.4.0</spark.version>
		<flink.version>1.7.0</flink.version>

		<jena.version>3.9.0</jena.version>
		<jsa.subversion>1</jsa.subversion>

		<jsa.version>${jena.version}-${jsa.subversion}</jsa.version>
		<scalastyle.config.path>${project.basedir}/scalastyle-config.xml</scalastyle.config.path>

		<httpcomponents.version>4.5.3</httpcomponents.version>
	</properties>

	<scm>
		<url>https://github.com/SANSA-Stack/SANSA-Query</url>
		<connection>scm:git:git://github.com/SANSA-Stack/SANSA-Query.git</connection>
		<developerConnection>scm:git:git@github.com:SANSA-Stack/SANSA-Query.git</developerConnection>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/SANSA-Stack/SANSA-Query/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>Aklakan</id>
			<name>Claus Stadler</name>
			<email>cstadler@informatik.uni-leipzig.de</email>
			<organization>AKSW, Department of Computer Science, University of Leipzig</organization>
			<organizationUrl>http://aksw.org</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
		<developer>
			<id>sbin</id>
			<name>Simon Bin</name>
			<email>sbin@informatik.uni-leipzig.de</email>
			<organization>AKSW, Department of Computer Science, University of Leipzig</organization>
			<organizationUrl>http://aksw.org</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
	</developers>


	<profiles>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<failOnError>false</failOnError>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile necessary for Scalastyle plugin to find the conf file -->
		<profile>
			<id>root-dir</id>
			<activation>
				<file>
					<exists>${project.basedir}/../../scalastyle-config.xml</exists>
				</file>
			</activation>
			<properties>
				<scalastyle.config.path>${project.basedir}/../scalastyle-config.xml</scalastyle.config.path>
			</properties>
		</profile>

	</profiles>

	<repositories>
		<!-- <repository> -->
		<!-- <id>Akka repository</id> -->
		<!-- <url>http://repo.akka.io/releases</url> -->
		<!-- </repository> -->
		<repository>
			<id>oss-sonatype</id>
			<name>oss-sonatype</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>apache-snapshot</id>
			<name>Apache repository (snapshots)</name>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven.aksw.internal</id>
			<name>AKSW Release Repository</name>
			<url>http://maven.aksw.org/archiva/repository/internal</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven.aksw.snapshots</id>
			<name>AKSW Snapshot Repository</name>
			<url>http://maven.aksw.org/archiva/repository/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>


			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sansa-rdf-common${scala.version.suffix}</artifactId>
				<version>${sansa.rdf.version}</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sansa-rdf-spark${scala.version.suffix}</artifactId>
				<version>${sansa.rdf.version}</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sansa-rdf-flink${scala.version.suffix}</artifactId>
				<version>${sansa.rdf.version}</version>
			</dependency>


			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sansa-query-spark${scala.version.suffix}</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sansa-datalake-spark${scala.version.suffix}</artifactId>
				<version>${sansa.datalake.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-graphx_${scala.binary.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>


			<!-- http components -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.6</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpcomponents.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient-cache</artifactId>
				<version>${httpcomponents.version}</version>
			</dependency>


			<!-- Scala -->
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>

			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-reflect</artifactId>
				<version>${scala.version}</version>
			</dependency>

			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scalap</artifactId>
				<version>${scala.version}</version>
			</dependency>


			<!-- Benchmarking bsbm and visualization of the results -->
			<dependency>
				<groupId>org.aksw.bsbm</groupId>
				<artifactId>bsbm-jsa</artifactId>
				<version>3.1.2</version>
			</dependency>

			<dependency>
				<groupId>org.aksw.beast</groupId>
				<artifactId>beast-bundle</artifactId>
				<version>1.0.0</version>
			</dependency>


			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>19.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>1.18</version>
			</dependency>

			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>apache-jena-libs</artifactId>
				<version>${jena.version}</version>
				<type>pom</type>
			</dependency>


			<dependency>
				<groupId>org.aksw.sparqlify</groupId>
				<artifactId>sparqlify-core</artifactId>
				<version>0.8.5</version>
				<exclusions>
					<exclusion>
						<groupId>org.aksw.sparqlify</groupId>
						<artifactId>sparqlify-tests</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.hive</groupId>
						<artifactId>hive-jdbc</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.jena</groupId>
						<artifactId>jena-</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.aksw.jena-sparql-api</groupId>
				<artifactId>jena-sparql-api-server-standalone</artifactId>
				<version>${jsa.version}</version>
				<exclusions>
					<!-- <exclusion> <groupId>xml-apis</groupId> <artifactId>xml-apis</artifactId> 
						</exclusion> <exclusion> <groupId>org.eclipse.jetty</groupId> <artifactId>jetty-xml</artifactId> 
						</exclusion> -->

				</exclusions>
				<!-- <classifier>${scala.compat.version}</classifier> -->
			</dependency>

			<dependency>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest_${scala.binary.version}</artifactId>
				<version>3.0.3</version>
			</dependency>

			<dependency>
				<groupId>com.holdenkarau</groupId>
				<artifactId>spark-testing-base_${scala.binary.version}</artifactId>
				<version>2.1.0_0.6.0</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
			</dependency>

                        <!-- Ontop -->
			<dependency>
			  <groupId>it.unibz.inf.ontop</groupId>
			  <artifactId>ontop-owlapi</artifactId>
			  <version>3.0.0-beta-2</version>
			</dependency>
			<dependency>
			  <groupId>it.unibz.inf.ontop</groupId>
			  <artifactId>ontop-system-sql-owlapi</artifactId>
			  <version>3.0.0-beta-2</version>
			</dependency>


		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.0</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<useFile>false</useFile>
						<disableXmlReport>true</disableXmlReport>
						<!-- If you have classpath issue like NoDefClassError,... -->
						<!-- useManifestOnlyJar>false</useManifestOnlyJar -->
						<includes>
							<include>**/*Test.*</include>
							<include>**/*Suite.*</include>
						</includes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.4</version>
					<configuration>
						<failOnError>false</failOnError>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<!-- Scala Maven -->
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.3.1</version>
					<executions>
						<execution>
							<goals>
								<goal>add-source</goal>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
							<configuration>
								<scalaVersion>${scala.version}</scalaVersion>
								<recompileMode>incremental</recompileMode>
								<useZincServer>true</useZincServer>
								<args>
									<arg>-unchecked</arg>
									<arg>-deprecation</arg>
									<arg>-feature</arg>
									<arg>-dependencyfile</arg>
									<arg>${project.build.directory}/.scala_dependencies</arg>
									<arg>-Xmax-classfile-name</arg>
									<arg>128</arg>
								</args>
								<jvmArgs>
									<jvmArg>-Xms1024m</jvmArg>
									<jvmArg>-Xmx1024m</jvmArg>
									<jvmArg>-XX:PermSize=${PermGen}</jvmArg>
									<jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
									<jvmArg>-XX:ReservedCodeCacheSize=${CodeCacheSize}</jvmArg>
								</jvmArgs>
								<!--<javacArgs> -->
								<!--<javacArg>-source</javacArg> -->
								<!--<javacArg>${java.version}</javacArg> -->
								<!--<javacArg>-target</javacArg> -->
								<!--<javacArg>${java.version}</javacArg> -->
								<!--<javacArg>-Xlint:all,-serial,-path</javacArg> -->
								<!--</javacArgs> -->

							</configuration>
						</execution>
					</executions>
					<configuration>
						<scalaVersion>${scala.version}</scalaVersion>
						<recompileMode>incremental</recompileMode>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.6</version>
					<configuration>
						<reportPlugins>
							<plugin>
								<artifactId>maven-project-info-reports-plugin</artifactId>
								<version>2.9</version>
							</plugin>
							<plugin>
								<groupId>net.alchim31.maven</groupId>
								<artifactId>scala-maven-plugin</artifactId>
							</plugin>
						</reportPlugins>
					</configuration>
				</plugin>

				<plugin>
					<groupId>com.amashchenko.maven.plugin</groupId>
					<artifactId>gitflow-maven-plugin</artifactId>
					<version>1.8.0</version>
					<configuration>
						<gitFlowConfig>
							<versionTagPrefix>v</versionTagPrefix>
						</gitFlowConfig>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.4.3</version>
					<executions>
						<!-- Run shade goal on package phase -->
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<shadedArtifactAttached>true</shadedArtifactAttached>
								<shadedClassifierName>jar-with-dependencies</shadedClassifierName>
								<filters>
									<filter>
										<artifact>*:*</artifact>
										<excludes>
											<exclude>META-INF/*.SF</exclude>
											<exclude>META-INF/*.DSA</exclude>
											<exclude>META-INF/*.RSA</exclude>
										</excludes>
									</filter>
								</filters>
								<transformers>
									<transformer
										implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
									<!-- add Main-Class to manifest file -->
									<!-- <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"> -->
									<!-- <mainClass>com.mkyong.core.utils.App</mainClass> -->
									<!-- </transformer> -->
								</transformers>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
							<configuration>
								<keyname>AKSW</keyname>
								<passphraseServerId>${gpg.keyname}</passphraseServerId>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.8</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											net.alchim31.maven
										</groupId>
										<artifactId>
											scala-maven-plugin
										</artifactId>
										<versionRange>
											[3.3.1,)
										</versionRange>
										<goals>
											<goal>testCompile</goal>
											<goal>compile</goal>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<!-- Scalastyle -->
				<plugin>
					<groupId>org.scalastyle</groupId>
					<artifactId>scalastyle-maven-plugin</artifactId>
					<version>1.0.0</version>
					<configuration>
						<verbose>false</verbose>
						<failOnViolation>true</failOnViolation>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<failOnWarning>false</failOnWarning>
						<sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
						<testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
						<!-- we use a central config located in the root directory -->
						<configLocation>${scalastyle.config.path}</configLocation>
						<outputFile>${project.basedir}/scalastyle-output.xml</outputFile>
						<outputEncoding>UTF-8</outputEncoding>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<distributionManagement>
		<!-- <repository> -->
		<!-- <id>ossrh</id> -->
		<!-- <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url> -->
		<!-- </repository> -->
		<repository>
			<id>maven.aksw.internal</id>
			<name>AKSW Release Repository</name>
			<url>http://maven.aksw.org/archiva/repository/internal</url>
		</repository>

		<snapshotRepository>
			<id>maven.aksw.snapshots</id>
			<name>AKSW Snapshot Repository</name>
			<url>http://maven.aksw.org/archiva/repository/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<modules>
		<module>sansa-query-common</module>
		<module>sansa-query-flink</module>
		<module>sansa-query-spark</module>
	</modules>
</project>
